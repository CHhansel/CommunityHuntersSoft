


implementar validaciones (express-validator)
suida de archivos, (multer) 


validar token get-users, 

membresias
rutas empleados, roles rutas,
facturas 



{
    asociadaasd
    datos
    create_user_proceduredas
    asdad
    asdad
    idcliente
}


login    -  recover password ()
dashboard -


propiedadades
clientes
contratos

login - recover password ()

100
  propiedadades
  clientes
  contratos

administracion roles
empleados
facturacion

sesion.

producto 
clientes

modulo configuracion y perfil


contrato 
facturacion
punto de venta


modulo ingresar facturas
integracion API Hacienda




modulo declaracion

roles user  admin client employee





admin crea 2 roles
admin client



cliente crea roles(departamentos) 
los roles estan conectados a un user para saber a quien pertenece (que cada cliente pueda ver sus roles )



los modulos se manejan por rol 
el rol esta ligado a la tabla user


Table user_rol  {
  id int [pk, increment, not null, unique]
  user_id int [ref: > user.id, not null]
  name varchar(50)
}

front end toma user_rol



depsues del logeo



agregar fecha registro de customer

function parseProperties(properties) {
    return properties.map(property => {
        const rawDate = property.creation_date;
        const formattedDate = new Date(rawDate).toLocaleDateString();

        return {
            Id: property.Id,
            Nombre: property.name,
            Descripci贸n: property.description,
            "ID de Usuario": property.user_id,
            Estado: property.state,
            "Fecha de Creaci贸n": formattedDate,
            "Nombre de Usuario": property.user_info_name,
            Cant贸n: property.canton,
            Distrito: property.district,
            "Direcci贸n Exacta": property.exact_address
        };
    });
}

const parsedProperties = parseProperties(yourArrayFromAPI);



flags para enviar notificaciones